{
    "Server Username": "BitsOJ",
    "Server Password": "micro",
    "Server IP": "localhost",
    "Admin Password": "root1",
    "Login Allowed": "True",
    "Judge Login Allowed": "True",
    "Submission Allowed": "True",
    "Scoreboard Update Allowed": "True",
    "Judge Key": "ceage00zedkwcel",
    "Client Key": "6qi2bguep7l06rc",
    "File Password": "2avnwdyuj9",
    "Contest Name": "Kodeathon A8",
    "Contest Theme": "Republic Day",
    "Contest Duration": "00:00:00",
    "Contest Status": "SETUP",
    "Contest Start Time": "00:00:00",
    "Contest End Time": "00:00:00",
    "Contest Set Time": 0,
    "Problem Codes": "('TRP', 'HOC', 'ACC')",
    "Languages": "('C', 'C++', 'PYTHON-3', 'JAVA')",
    "Ranking Algorithm": "IOI",
    "AC Points": 100,
    "Penalty Score": -20,
    "Penalty Time": -20,
    "Manual Review": "True",
    "Submission Time Limit": 0,
    "Number Of Problems": "3",
    "Problems": {
        "Problem 1": {
            "Title": "The Republic Parade",
            "Code": "TRP",
            "Time Limit": 1,
            "Author": "Piyush",
            "Statement": "During Republic Day march, the Event organiser is planning to place the podium for the Prime Minister near the flag post which is situated in a field, shaped like a regular N sided polygon. The vertices of the field are numbered (1 to N) in a clockwise fashion. He needs to place the podium in such a place C from where two of the security exits A and B are as NEAR as possible, for the safety of the VIPs. The security gates are at vertex A and B. Find the point from where the distances to BOTH of these security exits is minimum possible.\nIf there are multiple answers, output the least numbered vertex. Also, output the sum of moves needed to move from C to A and from C to B.\n \nNote: The podium can not be placed at A or B, for obvious reasons!\n \n",
            "Input Format": "First line contains T : No. of test-cases.\nSecond line contains N, A, B.\n",
            "Output Format": "For each test case, output in a single line: the vertex where the podium should be placed on ( C )  and the sum of moves required to move from C to A and from C to B.\n",
            "Constraints": "1 \u2264 T \u2264 10\n3 \u2264 N \u2264 10^5\n1 \u2264 A,B \u2264 N",
            "Example Input": "2\n6 2 4\n4 1 2\n",
            "Example Output": "3 2\n3 3\n\nExplanation:\n \nFor sample test case 1, Optimally, the podium should be placed at vertex 3. Minimum number of moves from vertex 3 to A is 1 and from C to B is 1. Hence the sum is 2.\n",
            "IO Files": 1
        },
        "Problem 2": {
            "Title": "House of Cards\n",
            "Code": "HOC",
            "Time Limit": 1,
            "Author": "Atharva",
            "Statement": "Rajendra Prasad got tired of his Presidential duties, and invited his friend, Nehru, over. They decided to play a game of cards. Prasad has N cards, and the i-th card has a number Ai written on it.\n\nThey take turns playing, starting with Prasad. In each turn, the player chooses a card and removes it. Also, he removes all cards having a number strictly less than the number on the chosen card. Formally, if the player chooses the i-th card, he removes that card and removes the j-th card for all j such that Aj < Ai.\n\nA player loses if he cannot make a move on his turn, that is, he loses if there are no cards left. Predict the outcome of the game, assuming both players play optimally.\n",
            "Input Format": "The  first line contains T : the number of test cases.\n - First line of each test case contain a single integer N.\n - Second line of each test case contains N-space separated integers.\n",
            "Output Format": "For each test case,\n\tIf Rajendra Prasad wins, print: Prasad\n\tIf Nehru wins, print: Nehru\n",
            "Constraints": " 1 <= T <= 10^3\n 1<= N <= 10^5\n 1<= A[i] <= 10^5\n",
            "Example Input": "1\n3\n4 5 7",
            "Example Output": "Prasad",
            "IO Files": 1
        },
        "Problem 3": {
            "Title": "Constitution Conundrum",
            "Code": "ACC",
            "Time Limit": 1,
            "Author": "Soham",
            "Statement": "Dr. B.R. Ambedkar has just finished writing the Constitution of India and stored it in a locker in the Parliament of India. Since Republic Day is approaching on which the Constitution will formally come into effect, he wants to review the Constitution one last time. Unfortunately he has forgotten the password of the locker but the makers of the locker had envisioned such a scenario and had encoded a riddle to open the locker even without the password. Since Dr. Ambedkar also has an important meeting coming up, its in your hands to ensure that the Constitution gets reviewed on time. Solve the following riddle to obtain the code for opening the locker.\n\nLet's define a function F(P) on a permutation P as follows:\nLet Gi be the greatest common divisor (GCD) of elements P1, P2, ..., Pi. Then F(P) is the number of distinct elements among G1, G2, ..., GN.\n\nLet Fmax(N) be the maximum value of F(P) among all the permutations P of integers 1, 2, ..., N.\n\nGiven an integer N, count the number of permutations of integers 1, 2, ..., N such that F(P) is equal to Fmax(N). Since the answer may be large, print the remainder of its division by 1000000007=10^9+7.\n",
            "Input Format": "The first line of the input contains T, the number of test cases.\n\tThe only line of each test case contains the integer N - the length of the permutations.\n",
            "Output Format": "The only line should contain your answer modulo 1000000000+7",
            "Constraints": "1<=T<=10000\n2<=N<=10000\n",
            "Example Input": "3\n2\n3\n6\n",
            "Example Output": "1\n4\n120\n",
            "IO Files": 1
        }
    }
}