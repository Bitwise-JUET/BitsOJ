There are N toys in a store arranged in a row. Each of them has a certain dynamic price associated. Dynamic price calculation works as follows:

1) A toy `i` can have 3 different prices ai,bi and ci.
2) If both the adjacent toys of current toy `i` are not sold yet then price will be ai
3) If one of the adjacent toy has been sold then price will be bi
4) If both the adjacent toys have been sold then price will be ci

Note that first and last toy can never have both the adjacent toys already sold.

If we were to buy all the toys of the store and we buy them optimally, find the minimal possible cost of buying all the toys. 

Input Format:
The first line of the input contains integer n (1 ≤ n ≤ 3000) — the number of toys. Then three lines follow, each line has n integers. The first line contains integers a1 a2 ... an. The second line contains b1, b2, ..., bn. The third line contains c1, c2, ..., cn. The following limits are fulfilled: 0 ≤ ai, bi, ci ≤ 105.

Number ai in the first line shows the price of toy i if both the adjacent toys have not been sold yet. Number bi in the second line shows the price if exactly one adjacent toy has been sold. Number сi in the third line shows the price of toy i if both the adjacent toys have been sold.

Sample Input 1:
4
1 2 3 4
4 3 2 1
0 1 1 0

Sample Output 1:
6

Sample Explanation:
First buy 3rd toy for price 3
Then buy 4th toy for price 1
Then buy 1st toy for price 1
At last buy 2nd toy for price 1
Total price would be 6.

Sample Input 2:
7
8 5 7 6 1 8 9
2 7 9 5 4 3 1
2 3 3 4 1 1 3

Sample Output 2:
20
